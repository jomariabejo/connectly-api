
spring.application.name=connectly-api

# Spring Boot banner (optional)
spring.main.banner-mode=off

# Server configuration
server.port=8080

# Database URL and credentials (example for MySQL) 1??
# spring.datasource.url=jdbc:mysql://localhost:3306/social_network_db
# spring.datasource.username=root
# spring.datasource.password=root
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database URL and credentials (Postgres) 2??
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=admin


spring.sql.init.mode=always
spring.datasource.initialize=true
spring.sql.init.schema-locations=schema.sql
spring.sql.init.continue-on-error=true

# JPA (Hibernate) settings
spring.jpa.hibernate.ddl-auto=update
                                    # or 'create', 'validate', 'none'
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
jwt.secret={}
jwt.expiration-time=86400000  # 1 day in milliseconds
jwt.token-prefix=Bearer
jwt.header=Authorization

# OAuth2 Configuration for Google
#spring.security.oauth2.client.registration.google.client-id=your-google-client-id
#spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
#spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# OAuth2 Configuration for Facebook
#spring.security.oauth2.client.registration.facebook.client-id=your-facebook-client-id
#spring.security.oauth2.client.registration.facebook.client-secret=your-facebook-client-secret
#spring.security.oauth2.client.registration.facebook.scope=email
#spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/facebook

# Disable CSRF (if you're using JWT and stateless sessions)
security.oauth2.client.csrf.enabled=false

# CORS configuration - modify based on your needs
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE

# Logging Configuration (example)
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO
logging.level.com.yourcompany=DEBUG

